{"version":3,"sources":["components/Header.tsx","scrollTo.ts","components/Footer.tsx","App.tsx","components/Spinner.tsx","environmentVariables.ts","serviceWorker.ts","index.tsx"],"names":["Header","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-current","style","cursor","onClick","elementId","contactElement","document","getElementById","scrollIntoView","scrollTo","Footer","maxWidth","href","Home","lazy","Projects","Project","NotFound","DataContext","React","createContext","projects","path","name","description","thumbnailFile","alt","iframe","fullWidth","src","projectBlogs","title","paragraphs","blogs","iframeSrc","App","fallback","Spinner","exact","component","role","width","height","EnvironmentVariables","isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","URL","process","origin","addEventListener","swUrl","fetch","headers","then","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ENV_PRODUCTION","Production","ENV_DEVELOPMENT","Development","NEW_GUID","uuidv4","BS_XS","BS_SM","BS_MD","BS_LG","BS_XL","BS_XXL","ReactDOM","render","StrictMode","message"],"mappings":"mMAKO,IAAMA,EAAS,WAClB,OACI,4BAAQC,UAAU,UACd,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,wCACX,kBAAC,IAAD,CAASC,GAAG,IAAID,UAAU,gBAA1B,oBAIA,4BAAQA,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,sBAAsBC,gBAAc,qBAAqBC,gBAAc,QAAQC,aAAW,qBAC1K,0BAAMP,UAAU,yBAGpB,yBAAKA,UAAU,2BAA2BQ,GAAG,sBACzC,yBAAKR,UAAU,cACX,kBAAC,IAAD,CAASC,GAAG,IAAID,UAAU,uBAAuBS,eAAa,QAA9D,QAGA,kBAAC,IAAD,CAASR,GAAG,YAAYD,UAAU,iBAAlC,YAGA,uBAAGQ,GAAG,mBAAmBR,UAAU,gBAAgBU,MAAO,CAAEC,OAAQ,WAAaC,QAAS,kBC1B/G,SAAkBC,GACrB,IAAIC,EAAqCC,SAASC,eAAeH,GAC7DC,GAAgBA,EAAeG,iBDwBqFC,CAAS,YAAzG,kBEbfC,EAAS,WAClB,OACI,4BAAQX,GAAG,SAASR,UAAU,mBAC1B,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,OACX,wBAAIQ,GAAG,cAAcR,UAAU,8BAA/B,YAEA,uBAAGA,UAAU,qBAAqBU,MAAO,CAAEU,SAAU,UAArD,0NAIA,uBAAGC,KAAK,qCAAR,kC,QCfdC,EAAOC,gBAAK,kBAAM,gCAClBC,EAAWD,gBAAK,kBAAM,gCACtBE,EAAUF,gBAAK,kBAAM,gCACrBG,EAAWH,gBAAK,kBAAM,gCAEfI,EAAoCC,IAAMC,cAAc,CACjEC,SAAU,CACN,CACItB,GAAI,uCACJuB,KAAM,kBACNC,KAAM,SACNC,YAAa,mBACbC,cAAe,CACXF,KAAM,QACN9B,KAAM,MACNiC,IAAK,cAETC,OAAQ,CACJC,WAAW,EACXC,IAAK,6CAETC,aAAc,CACV,CACIL,cAAe,CACXF,KAAM,gBACNG,IAAK,qBACLjC,KAAM,QAGd,CACIsC,MAAO,2BACPC,WAAY,CAAC,8DAGrBC,MAAO,CACH,CACIR,cAAe,CACXF,KAAM,gBACNG,IAAK,qBACLjC,KAAM,QAGd,CACIsC,MAAO,kBACPC,WAAY,CAAC,yDAIzB,CACIjC,GAAI,uCACJuB,KAAM,kBACNC,KAAM,SACNC,YAAa,mBACbC,cAAe,CACXF,KAAM,gBACNG,IAAK,qBACLjC,KAAM,OAEVkC,OAAQ,CACJE,IAAK,6CAETI,MAAO,CACH,CACIF,MAAO,OACPC,WAAY,CAAC,sDAEjB,CACID,MAAO,kBACPC,WAAY,CAAC,uDAEjB,CACID,MAAO,mBACPC,WAAY,CAAC,0DAIzB,CACIjC,GAAI,uCACJuB,KAAM,kBACNC,KAAM,SACNC,YAAa,mBACbC,cAAe,CACXF,KAAM,QACN9B,KAAM,MACNiC,IAAK,cAETQ,UAAW,4CACXD,MAAO,CACH,CACIF,MAAO,OACPC,WAAY,CAAC,sDAEjB,CACID,MAAO,kBACPC,WAAY,CAAC,uDAEjB,CACID,MAAO,mBACPC,WAAY,CAAC,0DAIzB,CACIjC,GAAI,uCACJuB,KAAM,kBACNC,KAAM,SACNC,YAAa,mBACbU,UAAW,6CAEf,CACInC,GAAI,uCACJuB,KAAM,kBACNC,KAAM,SACNC,YAAa,mBACbC,cAAe,CACXF,KAAM,gBACNG,IAAK,aACLjC,KAAM,WA2BP0C,IArBH,WACR,OACI,kBAAC,WAAD,KACI,kBAAC,EAAD,MAEA,0BAAM5C,UAAU,eACZ,kBAAC,WAAD,CAAU6C,SAAU,kBAACC,EAAA,EAAD,OAChB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAAChB,KAAK,IAAIiB,UAAW1B,IACjC,kBAAC,IAAD,CAAOS,KAAK,YAAYiB,UAAWxB,IACnC,kBAAC,IAAD,CAAOO,KAAK,wBAAwBiB,UAAWvB,IAC/C,kBAAC,IAAD,CAAOM,KAAK,IAAIiB,UAAWtB,OAKvC,kBAAC,EAAD,S,gCCpJZ,sDAEaoB,EAAU,WACnB,OACI,yBAAK9C,UAAU,WACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,8BAA8BiD,KAAK,SAASvC,MAAO,CAAEwC,MAAO,OAAQC,OAAQ,SACvF,0BAAMnD,UAAU,WAAhB,mB,oGCPfoD,E,iFAAAA,K,0BAAAA,E,yBAAAA,M,KAKUA,QCOTC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DASC,SAASC,EAASC,GACvB,GAA6C,kBAAmBC,UAAW,CAMzE,GAJkB,IAAIC,IACpBC,sBACAR,OAAOC,SAASnC,MAEJ2C,SAAWT,OAAOC,SAASQ,OAIvC,OAGFT,OAAOU,iBAAiB,QAAQ,WAC9B,IAAMC,EAAK,UAAMH,sBAAN,sBAEPV,IAgEV,SAAiCa,EAAeN,GAE9CO,MAAMD,EAAO,CACXE,QAAS,CAAE,iBAAkB,YAE5BC,MAAK,SAAAC,GAEJ,IAAMC,EAAcD,EAASF,QAAQI,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5Cb,UAAUc,cAAcC,MAAMP,MAAK,SAAAQ,GACjCA,EAAaC,aAAaT,MAAK,WAC7Bd,OAAOC,SAASuB,eAKpBC,EAAgBd,EAAON,MAG1BqB,OAAM,WACLC,QAAQC,IACN,oEAvFAC,CAAwBlB,EAAON,GAI/BC,UAAUc,cAAcC,MAAMP,MAAK,WACjCa,QAAQC,IACN,iHAMJH,EAAgBd,EAAON,OAM/B,SAASoB,EAAgBd,EAAeN,GACtCC,UAAUc,cACPhB,SAASO,GACTG,MAAK,SAAAQ,GACJA,EAAaQ,cAAgB,WAC3B,IAAMC,EAAmBT,EAAaU,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACf5B,UAAUc,cAAce,YAI1BR,QAAQC,IACN,iHAKEvB,GAAUA,EAAO+B,UACnB/B,EAAO+B,SAASd,KAMlBK,QAAQC,IAAI,sCAGRvB,GAAUA,EAAOgC,WACnBhC,EAAOgC,UAAUf,WAO5BI,OAAM,SAAAY,GACLX,QAAQW,MAAM,4CAA6CA,MC3E7DtC,OAAOuC,eAAiB/B,eAAmCX,EAAqB2C,WAChFxC,OAAOyC,gBAAkBjC,eAAmCX,EAAqB6C,YACjF1C,OAAO2C,SAAW,kBAAMC,gBACxB5C,OAAO6C,MAAQ,EACf7C,OAAO8C,MAAQ,IACf9C,OAAO+C,MAAQ,IACf/C,OAAOgD,MAAQ,IACfhD,OAAOiD,MAAQ,KACfjD,OAAOkD,OAAS,KAGpBC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO5D,UAAWJ,QAG1B7B,SAASC,eAAe,QAiBpBuC,OAAOuC,gBACPnB,IANAO,QAAQC,IACJ,uBACA,mGAOC5B,OAAOyC,kBDwEd,kBAAmBnC,WACrBA,UAAUc,cAAcC,MACrBP,MAAK,SAAAQ,GACJA,EAAaC,gBAEdG,OAAM,SAAAY,GACLX,QAAQW,MAAMA,EAAMgB,YC9FpB3B,QAAQC,IACJ,sDACA,yDACJD,QAAQC,IAAIpB,Q","file":"static/js/main.136d1177.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { scrollTo } from '../scrollTo'\r\n\r\nexport const Header = (): JSX.Element => {\r\n    return (\r\n        <header className=\"Header\">\r\n            <div className=\"container py-2\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                    <NavLink to=\"/\" className=\"navbar-brand\">\r\n                        Dennis Abramsson\r\n                    </NavLink>\r\n\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                        <div className=\"navbar-nav\">\r\n                            <NavLink to=\"/\" className=\"nav-link active ml-3\" aria-current=\"page\">\r\n                                Home\r\n                            </NavLink>\r\n                            <NavLink to=\"/projects\" className=\"nav-link ml-3\">\r\n                                Projects\r\n                            </NavLink>\r\n                            <a id=\"contact-btn-link\" className=\"nav-link ml-3\" style={{ cursor: 'pointer' }} onClick={() => scrollTo('Footer')}>\r\n                                Contacts\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n};","export function scrollTo(elementId: string): void {\r\n    var contactElement: HTMLElement | null = document.getElementById(elementId);\r\n    if (contactElement) contactElement.scrollIntoView();\r\n};","import React from 'react';\r\n\r\nimport { mapBlogs } from './Welcome';\r\n\r\nconst blogsxx = [\r\n    {\r\n        title: 'Uno',\r\n        paragraphs: [\r\n            ' <a href=\"Uno oqinweoqe oqeqo Uno oqinweoqe oqeqo Uno oqinweoqe oqeqo Uno oqinweoqe oqeqoUno oqinweoqe oqeqoUno oqinweoqe oqeqo Uno oqinweoqe oqeqo U ���� ����� no oqinweoqe oqeqo '\r\n        ]\r\n    }\r\n]\r\n\r\nexport const Footer = (): JSX.Element => {\r\n    return (\r\n        <footer id=\"Footer\" className=\"Footer bg-light\">\r\n            <div className=\"container p-3\">\r\n                <div className=\"p-4\">\r\n                    <h1 id=\"front-title\" className=\"display-1 mb-4 text-center\">Contacts</h1>\r\n\r\n                    <p className=\"text-center m-auto\" style={{ maxWidth: '600px' }}>\r\n                        Uno oqinweoqe oqeqo Uno oqinweoqe oqeqo Uno oqinweoqe oqeqo Uno oqinweoqe oqeqoUno oqinweoqe oqeqoUno oqinweoqe oqeqo Uno oqinweoqe oqeqo U ���� ����� no oqinweoqe oqeqo\r\n                    </p>\r\n\r\n                    <a href=\"mailto:kontakt@dennisabramsson.se\">kontakt@dennisabramsson.se</a>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};","import React, { Suspense, lazy, Fragment } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport { IData } from './interfaces';\r\n\r\nimport { Header } from './components/Header';\r\nimport { Footer } from './components/Footer';\r\nimport { Spinner } from './components/Spinner';\r\n\r\nconst Home = lazy(() => import('./routes/Home'));\r\nconst Projects = lazy(() => import('./routes/Projects'));\r\nconst Project = lazy(() => import('./routes/Project'));\r\nconst NotFound = lazy(() => import('./routes/NotFound'));\r\n\r\nexport const DataContext: React.Context<IData> = React.createContext({\r\n    projects: [\r\n        {\r\n            id: '2cbdb7fb-4404-424c-858e-7706796b9ba3',\r\n            path: '/project/spel-1',\r\n            name: 'Spel 1',\r\n            description: 'Det handlar om 1',\r\n            thumbnailFile: {\r\n                name: 'gwent',\r\n                type: 'jpg',\r\n                alt: 'qwent game'\r\n            },\r\n            iframe: {\r\n                fullWidth: false,\r\n                src: 'https://www.youtube.com/embed/GQ3cTuSH9zM'\r\n            },\r\n            projectBlogs: [\r\n                {\r\n                    thumbnailFile: {\r\n                        name: 'flying-robots',\r\n                        alt: 'flying-robots game',\r\n                        type: 'jpg'\r\n                    }\r\n                },\r\n                {\r\n                    title: 'Ganska coolt 11235412313',\r\n                    paragraphs: ['Vet att vi kan göra många blog inlägg! 11231231']\r\n                }\r\n            ],\r\n            blogs: [\r\n                {\r\n                    thumbnailFile: {\r\n                        name: 'flying-robots',\r\n                        alt: 'flying-robots game',\r\n                        type: 'jpg'\r\n                    }\r\n                },\r\n                {\r\n                    title: 'Ganska coolt 11',\r\n                    paragraphs: ['Vet att vi kan göra många blog inlägg! 11']\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: '842d1d8d-5fef-49d5-a8a9-794b61f7d35e',\r\n            path: '/project/spel-2',\r\n            name: 'Spel 2',\r\n            description: 'Det handlar om 2',\r\n            thumbnailFile: {\r\n                name: 'flying-robots',\r\n                alt: 'flying-robots game',\r\n                type: 'jpg'\r\n            },\r\n            iframe: {\r\n                src: 'https://www.youtube.com/embed/GQ3cTuSH9zM'\r\n            },\r\n            blogs: [\r\n                {\r\n                    title: 'Du 2',\r\n                    paragraphs: ['Vet att vi kan göra många blog inlägg! 2']\r\n                },\r\n                {\r\n                    title: 'Ganska coolt 22',\r\n                    paragraphs: ['Vet att vi kan göra många blog inlägg! 22']\r\n                },\r\n                {\r\n                    title: 'Ganska coolt 222',\r\n                    paragraphs: ['Vet att vi kan göra många blog inlägg! 222']\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: '677d7fd1-5928-453a-a3cc-79d015ec294c',\r\n            path: '/project/spel-3',\r\n            name: 'Spel 3',\r\n            description: 'Det handlar om 3',\r\n            thumbnailFile: {\r\n                name: 'arrow',\r\n                type: 'jpg',\r\n                alt: 'arrow game'\r\n            },\r\n            iframeSrc: 'https://www.youtube.com/embed/GQ3cTuSH9zM',\r\n            blogs: [\r\n                {\r\n                    title: 'Du 3',\r\n                    paragraphs: ['Vet att vi kan göra många blog inlägg! 3']\r\n                },\r\n                {\r\n                    title: 'Ganska coolt 33',\r\n                    paragraphs: ['Vet att vi kan göra många blog inlägg! 33']\r\n                },\r\n                {\r\n                    title: 'Ganska coolt 333',\r\n                    paragraphs: ['Vet att vi kan göra många blog inlägg! 333']\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: '94170ad9-63c8-4513-b48c-1b19efc2c74a',\r\n            path: '/project/spel-4',\r\n            name: 'Spel 4',\r\n            description: 'Det handlar om 4',\r\n            iframeSrc: 'https://www.youtube.com/embed/GQ3cTuSH9zM'\r\n        },\r\n        {\r\n            id: '94170ad9-63c8-4513-b48c-1b19efc2c74a',\r\n            path: '/project/spel-5',\r\n            name: 'Spel 5',\r\n            description: 'Det handlar om 5',\r\n            thumbnailFile: {\r\n                name: 'flying-robots',\r\n                alt: 'arrow game',\r\n                type: 'jpg'\r\n            }\r\n        }\r\n    ]\r\n} as IData);\r\n\r\nconst App = (): JSX.Element => {\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n\r\n            <main className=\"flex-grow-1\">\r\n                <Suspense fallback={<Spinner />}>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Home} />\r\n                        <Route path=\"/projects\" component={Projects} />\r\n                        <Route path=\"/project/:projectName\" component={Project} />\r\n                        <Route path=\"*\" component={NotFound} />\r\n                    </Switch>\r\n                </Suspense>\r\n            </main>\r\n\r\n            <Footer />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\n\r\nexport const Spinner = (): JSX.Element => {\r\n    return (\r\n        <div className=\"Spinner\">\r\n            <div className=\"d-flex justify-content-center\">\r\n                <div className=\"spinner-border text-primary\" role=\"status\" style={{ width: '3rem', height: '3rem' }}>\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","enum EnvironmentVariables {\r\n    Development = 'development',\r\n    Production = 'production'\r\n}\r\n\r\nexport default EnvironmentVariables;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport './styles/index.min.css';\r\nimport App from './App';\r\n\r\nimport EnvironmentVariables from './environmentVariables';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\ndeclare global {\r\n    type GUID = string;\r\n\r\n    interface Window {\r\n        NEW_GUID(): GUID;\r\n        ENV_PRODUCTION: boolean;\r\n        ENV_DEVELOPMENT: boolean;\r\n        BS_XS: number;\r\n        BS_SM: number;\r\n        BS_MD: number;\r\n        BS_LG: number;\r\n        BS_XL: number;\r\n        BS_XXL: number;\r\n    }\r\n};\r\n\r\n(function () {\r\n    window.ENV_PRODUCTION = process.env.REACT_APP_DIST_ENV === EnvironmentVariables.Production;\r\n    window.ENV_DEVELOPMENT = process.env.REACT_APP_DIST_ENV === EnvironmentVariables.Development;\r\n    window.NEW_GUID = () => uuidv4();\r\n    window.BS_XS = 0;\r\n    window.BS_SM = 576;\r\n    window.BS_MD = 768;\r\n    window.BS_LG = 992;\r\n    window.BS_XL = 1200;\r\n    window.BS_XXL = 1400;\r\n})();\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Route component={App} />\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('App')\r\n);\r\n\r\n(function () {\r\n    function developmentLogs() {\r\n        console.log(\r\n            \"%cprocess.env.REACT_APP_FEATURED_PROJECTS_QUANTITY:\",\r\n            \"font-family:system-ui;font-size:1rem;font-weight:bold\");\r\n        console.log(process.env.REACT_APP_FEATURED_PROJECTS_QUANTITY);\r\n    }\r\n\r\n    function productionLogs() {\r\n        console.log(\r\n            \"%cDennisAbramsson.se\",\r\n            \"color:red;font-family:system-ui;font-size:4rem;-webkit-text-stroke: 3px black;font-weight:bold\");\r\n    }\r\n\r\n    if (window.ENV_PRODUCTION) {\r\n        serviceWorker.register();\r\n        productionLogs();\r\n    }\r\n    else if (window.ENV_DEVELOPMENT) {\r\n        serviceWorker.unregister();\r\n        developmentLogs();\r\n    }\r\n})();\r\n"],"sourceRoot":""}