{"version":3,"sources":["components/Header.tsx","components/Footer.tsx","App.tsx","components/Spinner.tsx","environmentVariables.ts","serviceWorker.ts","index.tsx"],"names":["Header","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-current","Footer","Home","lazy","Projects","Project","NotFound","DataContext","React","createContext","projects","path","name","description","iframeSrc","blogs","title","paragraphs","App","fallback","Spinner","exact","component","role","EnvironmentVariables","Boolean","window","location","hostname","match","ENV_PRODUCTION","process","Production","ENV_DEVELOPMENT","Development","NEW_GUID","uuidv4","console","log","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9d71dbf6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Header = (): JSX.Element => {\r\n    return (\r\n        <header className=\"Header\">\r\n            <div className=\"container py-2\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                    <a className=\"navbar-brand\" href=\"/\">Dennis Abramsson</a>\r\n\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                        <div className=\"navbar-nav\">\r\n                            <a className=\"nav-link active ml-3\" aria-current=\"page\" href=\"/\">Home</a>\r\n                            <a className=\"nav-link ml-3\" href=\"/projects\">Projects</a>\r\n                            <a className=\"nav-link ml-3\" href=\"/contacts\">Contacts</a>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n};","import React from 'react';\r\n\r\nexport const Footer = (): JSX.Element => {\r\n    return (\r\n        <footer className=\"Footer bg-light p-4\">\r\n            <div className=\"container p-3\">\r\n                footer\r\n\r\n                <a href=\"mailto:kontakt@dennisabramsson.se\">kontakt@dennisabramsson.se</a>\r\n            </div>\r\n        </footer>\r\n    );\r\n};","import React, { Suspense, lazy, Fragment } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport { IData } from './interfaces';\r\n\r\nimport { Header } from './components/Header';\r\nimport { Footer } from './components/Footer';\r\nimport { Spinner } from './components/Spinner';\r\n\r\nconst Home = lazy(() => import('./routes/Home'));\r\nconst Projects = lazy(() => import('./routes/Projects'));\r\nconst Project = lazy(() => import('./routes/Project'));\r\nconst NotFound = lazy(() => import('./routes/NotFound'));\r\n\r\nexport const DataContext: React.Context<IData> = React.createContext({\r\n    projects: [\r\n        {\r\n            id: '2cbdb7fb-4404-424c-858e-7706796b9ba3',\r\n            path: '/project/spel-1',\r\n            name: 'Spel 1',\r\n            description: 'Det handlar om 1',\r\n            iframeSrc: 'https://www.youtube.com/embed/GQ3cTuSH9zM',\r\n            blogs: [\r\n                {\r\n                    title: 'Du 1',\r\n                    paragraphs: ['Vet att vi kan göra många blog inlägg! 1']\r\n                },\r\n                {\r\n                    title: 'Ganska coolt 11',\r\n                    paragraphs: ['Vet att vi kan göra många blog inlägg! 11']\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: '842d1d8d-5fef-49d5-a8a9-794b61f7d35e',\r\n            path: '/project/spel-2',\r\n            name: 'Spel 2',\r\n            description: 'Det handlar om 2',\r\n            iframeSrc: 'https://www.youtube.com/embed/GQ3cTuSH9zM',\r\n            blogs: [\r\n                {\r\n                    title: 'Du 2',\r\n                    paragraphs: ['Vet att vi kan göra många blog inlägg! 2']\r\n                },\r\n                {\r\n                    title: 'Ganska coolt 22',\r\n                    paragraphs: ['Vet att vi kan göra många blog inlägg! 22']\r\n                },\r\n                {\r\n                    title: 'Ganska coolt 222',\r\n                    paragraphs: ['Vet att vi kan göra många blog inlägg! 222']\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: '677d7fd1-5928-453a-a3cc-79d015ec294c',\r\n            path: '/project/spel-3',\r\n            name: 'Spel 3',\r\n            description: 'Det handlar om 3',\r\n            iframeSrc: 'https://www.youtube.com/embed/GQ3cTuSH9zM',\r\n            blogs: [\r\n                {\r\n                    title: 'Du 3',\r\n                    paragraphs: ['Vet att vi kan göra många blog inlägg! 3']\r\n                },\r\n                {\r\n                    title: 'Ganska coolt 33',\r\n                    paragraphs: ['Vet att vi kan göra många blog inlägg! 33']\r\n                },\r\n                {\r\n                    title: 'Ganska coolt 333',\r\n                    paragraphs: ['Vet att vi kan göra många blog inlägg! 333']\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: '94170ad9-63c8-4513-b48c-1b19efc2c74a',\r\n            path: '/project/spel-4',\r\n            name: 'Spel 4',\r\n            description: 'Det handlar om 4',\r\n            iframeSrc: 'https://www.youtube.com/embed/GQ3cTuSH9zM'\r\n        }\r\n    ]\r\n} as IData);\r\n\r\nconst App = (): JSX.Element => {\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n\r\n            <main className=\"flex-grow-1 container p-3\">\r\n                <Suspense fallback={<Spinner />}>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Home} />\r\n                        <Route path=\"/projects\" component={Projects} />\r\n                        <Route path=\"/project/:projectName\" component={Project} />\r\n                        <Route path=\"*\" component={NotFound} />\r\n                    </Switch>\r\n                </Suspense>\r\n            </main>\r\n\r\n            <Footer />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\n\r\nexport const Spinner = (): JSX.Element => {\r\n    return (\r\n        <div className=\"Spinner\">\r\n            <div className=\"d-flex justify-content-center\">\r\n                <div className=\"spinner-border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","enum EnvironmentVariables {\r\n    Development = 'development',\r\n    Production = 'production'\r\n}\r\n\r\nexport default EnvironmentVariables;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport './styles/index.min.css';\r\nimport App from './App';\r\n\r\nimport EnvironmentVariables from './environmentVariables';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\ndeclare global {\r\n    type GUID = string;\r\n\r\n    interface Window {\r\n        NEW_GUID(): GUID;\r\n        ENV_PRODUCTION: boolean;\r\n        ENV_DEVELOPMENT: boolean;\r\n    }\r\n};\r\n\r\n(function () {\r\n    window.ENV_PRODUCTION = process.env.REACT_APP_DIST_ENV === EnvironmentVariables.Production;\r\n    window.ENV_DEVELOPMENT = process.env.REACT_APP_DIST_ENV === EnvironmentVariables.Development;\r\n    window.NEW_GUID = () => uuidv4();\r\n\r\n    function developmentLogs() {\r\n        console.log(\r\n            \"%cprocess.env.REACT_APP_FEATURED_PROJECTS_QUANTITY:\",\r\n            \"font-family:system-ui;font-size:1rem;font-weight:bold\");\r\n        console.log(process.env.REACT_APP_FEATURED_PROJECTS_QUANTITY);\r\n    }\r\n\r\n    function productionLogs() {\r\n        console.log(\r\n            \"%cDennisAbramsson.se\",\r\n            \"color:red;font-family:system-ui;font-size:4rem;-webkit-text-stroke: 3px black;font-weight:bold\");\r\n    }\r\n\r\n    if (window.ENV_PRODUCTION) productionLogs();\r\n    else if (window.ENV_DEVELOPMENT) developmentLogs();\r\n})();\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Router>\r\n            <Route component={App} />\r\n        </Router>\r\n    </React.StrictMode>,\r\n    document.getElementById('App')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}